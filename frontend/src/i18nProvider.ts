//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';
import grOriginal from 'ra-language-greek';

const enResources = {
  resources: {
    Project: {
      name: 'Project',
      fields: {
        projectId: 'Project Id',
        name: 'Name',
        typeOfTheProject: 'Type Of The Project',
        budget: 'Budget',
        id: 'id',
      },
    },
    Budget: { name: 'Budget', fields: { type: 'Type', id: 'id' } },
    Year: { name: 'Year', fields: { year: 'Year', id: 'id' } },
    User: {
      name: 'User',
      fields: { name: 'Name', surname: 'Surname', id: 'id' },
    },
  },
};
const frResources = {
  resources: {
    Project: {
      name: 'Project (fr)',
      fields: {
        projectId: 'Project Id (fr)',
        name: 'Name (fr)',
        typeOfTheProject: 'Type Of The Project (fr)',
        budget: 'Budget (fr)',
        id: 'id',
      },
    },
    Budget: { name: 'Budget (fr)', fields: { type: 'Type (fr)', id: 'id' } },
    Year: { name: 'Year (fr)', fields: { year: 'Year (fr)', id: 'id' } },
    User: {
      name: 'User (fr)',
      fields: { name: 'Name (fr)', surname: 'Surname (fr)', id: 'id' },
    },
  },
};
const grResources = {
  resources: {
    Project: {
      name: 'Project (gr)',
      fields: {
        projectId: 'Project Id (gr)',
        name: 'Name (gr)',
        typeOfTheProject: 'Type Of The Project (gr)',
        budget: 'Budget (gr)',
        id: 'id',
      },
    },
    Budget: { name: 'Budget (gr)', fields: { type: 'Type (gr)', id: 'id' } },
    Year: { name: 'Year (gr)', fields: { year: 'Year (gr)', id: 'id' } },
    User: {
      name: 'User (gr)',
      fields: { name: 'Name (gr)', surname: 'Surname (gr)', id: 'id' },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);
const gr = mergeTranslations(grOriginal, grResources);

const translations = { en, fr, gr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Français' },
    { locale: 'gr', name: 'Ελληνικά' },
  ],
);
